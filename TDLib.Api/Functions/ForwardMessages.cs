using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public partial class TdApi
    {
        /// <summary>
        /// Forwards previously sent messages. Returns the forwarded messages in the same order as the message identifiers passed in message_ids. If a message can't be forwarded, null will be returned instead of the message
        /// </summary>
        public class ForwardMessages : Function<Messages>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "forwardMessages";

            /// <summary>
            /// Extra data attached to the message
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the chat to which to forward messages 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            /// <summary>
            /// Identifier of the chat from which to forward messages 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("from_chat_id")]
            public long FromChatId { get; set; }

            /// <summary>
            /// Identifiers of the messages to forward
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("message_ids")]
            public long[] MessageIds { get; set; }

            /// <summary>
            /// Pass true to disable notification for the message, doesn't work if messages are forwarded to a secret chat 
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("disable_notification")]
            public bool DisableNotification { get; set; }

            /// <summary>
            /// Pass true if the messages are sent from the background
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("from_background")]
            public bool FromBackground { get; set; }

            /// <summary>
            /// True, if the messages should be grouped into an album after forwarding. For this to work, no more than 10 messages may be forwarded, and all of them must be photo or video messages
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("as_album")]
            public bool AsAlbum { get; set; }

            /// <summary>
            /// True, if content of the messages needs to be copied without links to the original messages. Always true if the messages are forwarded to a secret chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("send_copy")]
            public bool SendCopy { get; set; }

            /// <summary>
            /// True, if media captions of message copies needs to be removed. Ignored if send_copy is false
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("remove_caption")]
            public bool RemoveCaption { get; set; }
        }
    }
}