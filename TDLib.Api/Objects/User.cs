using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// AUTOGENERATED: DO NOT EDIT!
    /// </summary>
    public partial class TdApi
    {
        public class User : Object
        {
            [JsonProperty("@type")] public override string DataType { get; set; } = "user";

            [JsonProperty("@extra")] public override string Extra { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("id")]
            public int Id { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("first_name")]
            public string FirstName { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("last_name")]
            public string LastName { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("username")]
            public string Username { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("phone_number")]
            public string PhoneNumber { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("status")]
            public UserStatus Status { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("profile_photo")]
            public ProfilePhoto ProfilePhoto { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("outgoing_link")]
            public LinkState OutgoingLink { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("incoming_link")]
            public LinkState IncomingLink { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_verified")]
            public bool IsVerified { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("restriction_reason")]
            public string RestrictionReason { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("have_access")]
            public bool HaveAccess { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("type")]
            public UserType Type { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("language_code")]
            public string LanguageCode { get; set; }
        }
    }
}