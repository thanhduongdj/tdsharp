using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// AUTOGENERATED: DO NOT EDIT!
    /// </summary>
    public partial class TdApi
    {
        public class Message : Object
        {
            [JsonProperty("@type")] public override string DataType { get; set; } = "message";

            [JsonProperty("@extra")] public override string Extra { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("id")]
            public long Id { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("sender_user_id")]
            public int SenderUserId { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("sending_state")]
            public MessageSendingState SendingState { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_outgoing")]
            public bool IsOutgoing { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("can_be_edited")]
            public bool CanBeEdited { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("can_be_forwarded")]
            public bool CanBeForwarded { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("can_be_deleted_only_for_self")]
            public bool CanBeDeletedOnlyForSelf { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("can_be_deleted_for_all_users")]
            public bool CanBeDeletedForAllUsers { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("is_channel_post")]
            public bool IsChannelPost { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("contains_unread_mention")]
            public bool ContainsUnreadMention { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("date")]
            public int Date { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("edit_date")]
            public int EditDate { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("forward_info")]
            public MessageForwardInfo ForwardInfo { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("reply_to_message_id")]
            public long ReplyToMessageId { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("ttl")]
            public int Ttl { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("ttl_expires_in")]
            public double? TtlExpiresIn { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("via_bot_user_id")]
            public int ViaBotUserId { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("author_signature")]
            public string AuthorSignature { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("views")]
            public int Views { get; set; }

            [JsonConverter(typeof(Converter.Int64))]
            [JsonProperty("media_album_id")]
            public Int64 MediaAlbumId { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("content")]
            public MessageContent Content { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("reply_markup")]
            public ReplyMarkup ReplyMarkup { get; set; }
        }
    }
}