using System;
using Newtonsoft.Json;

namespace TdLib
{
    /// <summary>
    /// AUTOGENERATED: DO NOT EDIT!
    /// </summary>
    public partial class TdApi
    {
        public class WebPage : Object
        {
            [JsonProperty("@type")] public override string DataType { get; set; } = "webPage";

            [JsonProperty("@extra")] public override string Extra { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("url")]
            public string Url { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("display_url")]
            public string DisplayUrl { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("type")]
            public string Type { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("site_name")]
            public string SiteName { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("title")]
            public string Title { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("description")]
            public string Description { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("photo")]
            public Photo Photo { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("embed_url")]
            public string EmbedUrl { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("embed_type")]
            public string EmbedType { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("embed_width")]
            public int EmbedWidth { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("embed_height")]
            public int EmbedHeight { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("duration")]
            public int Duration { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("author")]
            public string Author { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("animation")]
            public Animation Animation { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("audio")]
            public Audio Audio { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("document")]
            public Document Document { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("sticker")]
            public Sticker Sticker { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("video")]
            public Video Video { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("video_note")]
            public VideoNote VideoNote { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("voice_note")]
            public VoiceNote VoiceNote { get; set; }

            [JsonConverter(typeof(Converter))]
            [JsonProperty("has_instant_view")]
            public bool HasInstantView { get; set; }
        }
    }
}